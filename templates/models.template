import * as {componentName} from '../services/{componentName}';

export default {
    namespace: '{componentName}',
    state: {},
    effects: {
        *{componentName}List({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}List, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}ListResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        },
        *{componentName}Edit({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}Edit, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}EditResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        },
        *{componentName}Add({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}Add, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}AddResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        },
        *{componentName}Delete({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}Delete, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}DeleteResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        },
        *{componentName}Detail({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}Detail, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}DetailResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        },
        *{componentName}Enable({ payload, callback }, { call, put }) {
            const testRes = yield call({componentName}.{componentName}Enable, payload);
            yield put({
                type: 'success',
                payload: {
                    {componentName}EnableResult: testRes
                }
            });
            callback && callback(testRes);
            return testRes;
        }
    },
    reducers: {
        success(state, { payload }) {
            return {
                ...state,
                ...payload
            }
        }
    }
}